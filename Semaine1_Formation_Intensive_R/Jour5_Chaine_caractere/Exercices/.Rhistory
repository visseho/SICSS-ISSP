1:5
letters[1:5]
paste(1:5, letters[1:5]) # sep met un espace par dÃ©faut
paste(1:5, letters[1:5], sep ="")
paste0(1:5, letters[1:5])
letters[1:5]
paste(letters[1:5], sep = "+")
paste(letters[1:5], sep = "+")
paste(1:5, letters[1:5], sep = "+")
paste(letters[1:5], collapse = "!")
paste0(1:5, letters[1:5], collapse = "???")
paste(1:5, "Z", sep = "*")
rm(list = ls())
library(tidyverse)
library(tidyverse)
library(summarytools)
library(tidyverse)
library(summarytools)
restaurants <- read_csv("../Donnees/restaurants.csv",
col_types = "ccccccccnnccicccciccciD")
View(restaurants)
glimpse(restaurants)
01+1
"O1" + 1
head(restaurants$Zip_Code)
restaurants1 <-
restaurants %>%
mutate(ZIP_length = nchar(Zip_Code)) #%>%
restaurants <-
restaurants %>%
mutate(ZIP_length = nchar(Zip_Code)) #%>%
library(gtsummary)
freq(restaurants$ZIP_length)
restaurants <-
restaurants %>%
mutate(ZIP_5_essai = substr(Zip_Code, 1, 5))
restaurants <-
restaurants %>%
mutate(ZIP_5 = substr(Zip_Code, 1, 5),
ZIP_3 = substr(Zip_Code, 2, 4),
count_zip5 = nchar(ZIP_5))
restaurants <-
restaurants %>%
mutate(mailing_address =
paste(Address, ", ", City, ", WA ", ZIP_5, sep = ""))
restaurants %>% distinct(mailing_address) %>% head()
1:5
letters[1:5]
paste(1:5, letters[1:5]) # sep met un espace par dÃ©faut
paste(1:5, letters[1:5], sep ="")
paste0(1:5, letters[1:5])
letters[1:5]
paste(letters[1:5], sep = "+")
paste(1:5, letters[1:5], sep = "+")
paste(letters[1:5], collapse = "!")
paste0(1:5, letters[1:5], collapse = "???")
paste(1:5, letters[1:3], collapse = "???")
paste(1:5, "Z", sep = "*")
paste(1:5, "Z", collapse = "*", sep = "")
paste(1:5, "Z", collapse = "*", sep = "+")
paste(1:5, "Z", sep = "*", collapse = " ~ ")
1:5
c(1,2,3,4,5)
c(a, b, c, d, e)
paste(1:5, letters[1:5], sep = "allo", collapse = "+")
str_sub("Washington", 3, 8)
str_sub("Washington", 8, 3) # Pourquoi ceci ne marche pas?
str_sub("Washington", -5, -3)
str_sub("Washington", -3, -5) # Pourquoi ceci ne marche pas?
str_c(letters[1:5], 1:5)
str_c(letters[1:5], 1:5, collapse = "*")
nchar("voisines")
str_length("voisines")
head(restaurants$City)
head(unique(restaurants$City))
head(unique(restaurants$Name))
head(unique(restaurants$Address))
restaurants <-
restaurants %>%
mutate(Name = str_to_upper(Name),
Address = str_to_upper(Address),
City = str_to_upper(City))
head(unique(restaurants$City))
head(unique(restaurants$Name), 20)
restaurants <-
restaurants %>%
mutate_if(is.character, str_trim)
head(unique(restaurants$Name), 4)
restaurants <-
restaurants %>%
mutate_if(is.character(Name), str_trim)
is.character(restaurants$Name)
restaurants <-
restaurants %>%
mutate_if(is.character, str_trim)
head(unique(restaurants$Name))
coffee <-
restaurants %>%
filter(str_detect(Name, "COFFEE|ESPRESSO|ROASTER|CAFE"))
coffee %>% distinct(Name) %>% head()
head(unique(restaurants$Phone))
exemple_test <- c("2061234567", "(206)1234567",
"(306) 123-4567", "555-206-1234")
exemple_test
str_detect(exemple_test, "206")
str_detect(exemple_test, ^"206")
str_detect(exemple_test, "^206")
str_detect(exemple_test, "(206)")
str_detect(exemple_test, "206")
str_detect(exemple_test, "(206)")
str_detect(exemple_test, "\\(206\\)")
code_206_pattern <- "^\\(?206|^\\(?306"
code_206_pattern
str_detect(exemple_test, code_206_pattern)
str_view(exemple_test, code_206_pattern)
code_206_pattern <- "^\\(?206"
restaurants %>%
mutate(contient_nombre_206 = str_detect(Phone, code_206_pattern)) %>%
group_by(contient_nombre_206) %>%
tally()
direction_exemples <- c("2812 THORNDYKE AVE W", "512 NW 65TH ST",
"407 CEDAR ST", "15 NICKERSON ST ")
direction_pattern <- " (N|NW|NE|S|SW|SE|W|E)( |$)"
direction_pattern1 <- "(N|NW|NE|S|SW|SE|W|E)"
str_view(str_extract(direction_exemples, " N "))
str_view(str_extract(direction_exemples, "N "))
str_view(str_extract(direction_exemples, " N"))
direction_pattern1 <- "(N|NW|NE|S|SW|SE|W|E)"
str_view(str_extract(direction_exemples, " N"))
str_extract(direction_exemples, direction_pattern1)
direction_pattern <- " (N|NW|NE|S|SW|SE|W|E)( |$)"
str_extract(direction_exemples, direction_pattern)
#restaurants <-
restaurants %>%
distinct(Address) %>%
mutate(city_region = #str_extract(Address, direction_pattern)) %>%
str_trim(str_extract(Address, direction_pattern))) %>%
count(city_region) %>% arrange(desc(n))
address_number_test_examples <-
c("2812 THORNDYKE AVE W", "1ST AVE", "10AA 1ST AVE",
"10-A 1ST AVE", "5201-B UNIVERSITY WAY NE",
"7040 1/2 15TH AVE NW")
str_replace(address_number_test_examples,
address_number_pattern, replacement = "")
address_number_pattern <- "^[0-9]*-?[A-Z]*? (1/2 )?"
address_number_test_examples <-
c("2812 THORNDYKE AVE W", "1ST AVE", "10AA 1ST AVE",
"10-A 1ST AVE", "5201-B UNIVERSITY WAY NE",
"7040 1/2 15TH AVE NW")
str_replace(address_number_test_examples,
address_number_pattern, replacement = "")
address_unit_pattern <- " (#|STE|SUITE|SHOP|UNIT).*$"
address_unit_test_examples <-
c("1ST AVE", "RAINIER AVE S #A", "FAUNTLEROY WAY SW STE 108",
"4TH AVE #100C", "NW 54TH ST")
str_replace(address_unit_test_examples, address_unit_pattern,
replacement = "")
address_unit_pattern <- " (#|STE|SUITE|SHOP|UNIT).*$"
restaurants <-
restaurants %>%
mutate(street_only = str_trim(str_replace(street_only,
address_unit_pattern, replacement = "")))
restaurants <-
restaurants %>%
mutate(street_only = str_replace(Address, address_number_pattern,
replacement = ""))
restaurants %>% distinct(street_only) %>% head(11)
restaurants %>% distinct(street_only) %>% head(11)
address_unit_pattern <- " (#|STE|SUITE|SHOP|UNIT).*$"
address_unit_test_examples <-
c("1ST AVE", "RAINIER AVE S #A", "FAUNTLEROY WAY SW STE 108",
"4TH AVE #100C", "NW 54TH ST")
str_replace(address_unit_test_examples, address_unit_pattern,
replacement = "")
address_unit_pattern <- " (#|STE|SUITE|SHOP|UNIT).*$"
restaurants <-
restaurants %>%
mutate(street_only = str_trim(str_replace(street_only,
address_unit_pattern, replacement = "")))
restaurants %>% distinct(street_only) %>% head(11)
restaurants %>%
distinct(Business_ID, Date, Inspection_Score, street_only) %>%
filter(Inspection_Score > 45) %>%
count(street_only) %>%
arrange(desc(n)) %>%
head(n=5)
head(unique(restaurants$Violation_Description))
head(str_split_fixed(restaurants$Violation_Description, " - ", n = 2))
head(unique(restaurants$Violation_Description))
knitr::include_graphics("../Images/c10reactive.png")
